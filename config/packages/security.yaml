security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
#        in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: in_database
    #        remember_me:
   #            secret: '%kernel.secret%'
  #              lifetime: 86400
 #               path: /
            user_checker: App\Security\UserChecker
            form_login:
                login_path: security_login
                check_path: security_login
            logout:
                path: security_logout
                target: home
    access_denied_url: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/lr-adm, roles: ROLE_ADMIN }
         - { path: ^/verified, roles: ROLE_VERIFIED }
         - { path: ^/utilisateur, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: ROLE_VERIFIED
        ROLE_VERIFIED: ROLE_USER